/*!
  * mande v1.0.0
  * (c) 2021 Eduardo San Martin Morote
  * @license MIT
  */
let e=/\/+$/,t=/^\/+/;const n={responseAs:"json",headers:{Accept:"application/json","Content-Type":"application/json"}};function s(s,o={},r){function c(o,r,c,a={}){let u,p;"object"==typeof r?(u="",p=r,a=c||{}):(u=r,p=c);let b=Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({},n),l),{method:o}),a),{headers:(j=Object.assign(Object.assign(Object.assign({},n.headers),l.headers),a.headers),Object.keys(j).reduce(((e,t)=>(null!=j[t]&&(e[t]=j[t]),e)),{}))});var j;let f=Object.assign(Object.assign(Object.assign({},n.query),l.query),a.query),{responseAs:d}=b;return u=function(n,s){return n.replace(e,"")+"/"+s.replace(t,"")}(s,"number"==typeof u?""+u:u||""),u+=function(e){let t=Object.keys(e).map((t=>[t,e[t]].map(encodeURIComponent).join("="))).join("&");return t?"?"+t:""}(f),p&&(b.body=JSON.stringify(p)),i(u,b).then((e=>Promise.all([e,"response"===d?e:e[d]().catch((()=>null))]))).then((([e,t])=>{if(e.status>=200&&e.status<300)return 204==e.status?null:t;let n=new Error(e.statusText);throw n.response=e,n.body=t,n}))}const i="undefined"!=typeof fetch?fetch:r;if(!i)throw new Error("No fetch function exists. Make sure to include a polyfill on Node.js.");const l=Object.assign({query:{},headers:{}},o);return{options:l,post:c.bind(null,"POST"),put:c.bind(null,"PUT"),patch:c.bind(null,"PATCH"),get:(e,t)=>c("GET",e,null,t),delete:(e,t)=>c("DELETE",e,null,t)}}function o(e,t){const n=t.length;return function(){let s=e,o=Array.from(arguments);if(arguments.length===n){s=Object.assign({},e);const[t]=o.splice(0,1);t(s)}return t.call(null,s,...o)}}export{n as defaults,s as mande,o as nuxtWrap};
